[{"id":"dc22f819.143a78","type":"tab","label":"Registered E-mail","disabled":false,"info":""},{"id":"e6a57230.33eb5","type":"switch","z":"dc22f819.143a78","name":"If access token received","property":"statusCode","propertyType":"msg","rules":[{"t":"eq","v":"200","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":570,"y":241,"wires":[["3cc8e241.89b76e"],[]],"inputLabels":["httpResult"],"outputLabels":["noToken","tokenReceived"]},{"id":"cb6e8ba3.a12b48","type":"http request","z":"dc22f819.143a78","name":"Create user request","method":"use","ret":"obj","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","authType":"","x":1240,"y":234,"wires":[["e6b307af.a3cb38"]]},{"id":"fa18abaf.ac7128","type":"function","z":"dc22f819.143a78","name":"Prepare request","func":"/*\nUse Access (Bearer) token to authenticate API call.\nIn this example, we will use the \"/sms-kpn/v1/send\" API\n\nNote: The Access token was retrieved from the \nauthorization request: `msg.payload.access_token`\n*/\n\nvar baseURL = \"https://api-prd.kpn.com/data/registeredemail/registeredemail\";\nvar apiEndpoint = \"/api/user\";\n\nmsg.method = \"POST\";\nmsg.url = baseURL + apiEndpoint;\nmsg.headers = {};\nmsg.headers.Authorization = \"Bearer \" + msg.payload.access_token;\nmsg.headers[\"Content-Type\"] = \"application/json\";\n//msg.payload = null;\nmsg.payload = msg.json;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1020,"y":234,"wires":[["cb6e8ba3.a12b48","a2d95cf1.a2cef"]],"info":"Use Bearer token from previous request in the headers to authenticate API request.\n\nNote: The bearer token gets retrieved from the payload of the previous authorization request: `msg.payload.access_token`\n"},{"id":"e6b307af.a3cb38","type":"debug","z":"dc22f819.143a78","name":"Create user request result","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1492,"y":234,"wires":[]},{"id":"3cc8e241.89b76e","type":"change","z":"dc22f819.143a78","name":"Set request body","rules":[{"t":"set","p":"json","pt":"msg","to":"{\"emailAddress\":\"klaus.frey+test08@gmail.com\"}","tot":"json"}],"action":"","property":"","from":"","to":"","reg":false,"x":810,"y":234,"wires":[["fa18abaf.ac7128"]],"info":"1. Double-click `Set request body`\n2. Open the json and enter the details of the new user.\n```\n{\n    \"first_name\": \"New user first name\",\n    \"last_name\": \"New user family name\",\n    \"password\": \"new.user.1234\",\n    \"role\": \"CFO\",\n    \"email\": \"new.user@email.com\",\n    \"locale\": \"nl\",\n    \"company\": \"TestUser Ltd\"\n}\n```\n3. click `Done`"},{"id":"a2d95cf1.a2cef","type":"debug","z":"dc22f819.143a78","name":"Prepare request result","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1240,"y":314,"wires":[]},{"id":"5e99af21.3156a","type":"switch","z":"dc22f819.143a78","name":"If access token received","property":"statusCode","propertyType":"msg","rules":[{"t":"eq","v":"200","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":570,"y":421,"wires":[["5b76bc54.ae6e54"],[]],"inputLabels":["httpResult"],"outputLabels":["noToken","tokenReceived"]},{"id":"7daf702d.173e1","type":"http request","z":"dc22f819.143a78","name":"Create user request","method":"use","ret":"obj","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","authType":"","x":1240,"y":414,"wires":[["61a9ba1a.58b814"]]},{"id":"10dbcc68.c92a04","type":"function","z":"dc22f819.143a78","name":"Prepare request","func":"/*\nUse Access (Bearer) token to authenticate API call.\nIn this example, we will use the \"/sms-kpn/v1/send\" API\n\nNote: The Access token was retrieved from the \nauthorization request: `msg.payload.access_token`\n*/\n\nvar baseURL = \"https://api-prd.kpn.com/data/registeredemail/registeredemail\";\nvar apiEndpoint = \"//webservice/mailsender/send\";\n\nmsg.method = \"POST\";\nmsg.url = baseURL + apiEndpoint;\nmsg.headers = {};\nmsg.headers.Authorization = \"Bearer \" + msg.payload.access_token;\nmsg.headers[\"Content-Type\"] = \"application/json\";\n//msg.payload = null;\nmsg.payload = msg.json;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1020,"y":414,"wires":[["7daf702d.173e1","ca4983e1.62e82"]],"info":"Use Bearer token from previous request in the headers to authenticate API request.\n\nNote: The bearer token gets retrieved from the payload of the previous authorization request: `msg.payload.access_token`\n"},{"id":"61a9ba1a.58b814","type":"debug","z":"dc22f819.143a78","name":"Create user request result","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1493,"y":414,"wires":[]},{"id":"5b76bc54.ae6e54","type":"change","z":"dc22f819.143a78","name":"Set request body","rules":[{"t":"set","p":"json","pt":"msg","to":"{\"message_body\":\"this is the email body\",\"sender_email\":\"klaus.frey@outlook.com\",\"sender_real_name\":\"Jane Doe\",\"subject\":\"this is the subject\",\"x-own-id\":\"id\",\"x-own-guid\":\"guid\",\"x-own-campaign\":\"campaign\",\"recipient_email\":\"klaus.frey@kpn.com\",\"recipient_language\":\"en\",\"attachments\":[{\"attachment\":\"BAse64E=\",\"attachment_name\":\"attachment.pdf\",\"attachment_type\":\"application/pdf\"}]}","tot":"json"}],"action":"","property":"","from":"","to":"","reg":false,"x":810,"y":414,"wires":[["10dbcc68.c92a04"]],"info":"1. Double-click `Set request body`\n2. Open the json and enter the details of the new user.\n```\n{\n    \"first_name\": \"New user first name\",\n    \"last_name\": \"New user family name\",\n    \"password\": \"new.user.1234\",\n    \"role\": \"CFO\",\n    \"email\": \"new.user@email.com\",\n    \"locale\": \"nl\",\n    \"company\": \"TestUser Ltd\"\n}\n```\n3. click `Done`"},{"id":"ca4983e1.62e82","type":"debug","z":"dc22f819.143a78","name":"Prepare request result","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1240,"y":494,"wires":[]},{"id":"b9074db7.326f7","type":"comment","z":"dc22f819.143a78","name":"Create new user request","info":"","x":570,"y":200,"wires":[],"icon":"node-red/alert.svg"},{"id":"7af4d192.98326","type":"inject","z":"dc22f819.143a78","name":"Trigger request","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":180,"y":140,"wires":[["cb50abf9.ac3358"]]},{"id":"cb50abf9.ac3358","type":"credentials","z":"dc22f819.143a78","name":"Set API Store credentials","props":[{"value":"client_id","type":"msg"},{"value":"client_secret","type":"msg"}],"x":189,"y":205,"wires":[["f0e9c482.aae248"]]},{"id":"f0e9c482.aae248","type":"function","z":"dc22f819.143a78","name":"Prepare request","func":"/*\nTo use KPN APIs, an access token (also called bearer) token must first be obtained.\nThe bearer token is obtained by invoking an Authorization API (`loginAPI`) using a POST method.\nThe API payload is an object with the client credentials:\n\nclient_id\nclient_secret\n\nIf correct, the API returns a payload object that will contain a valid access token authentication in subsequest API requests.\n*/\n\n// set `loginAPI` API here:\n\nvar loginAPI = \"https://api-prd.kpn.com/oauth/client_credential/accesstoken?grant_type=client_credentials\";\n\nmsg.method = \"POST\";\nmsg.url = loginAPI;\nmsg.headers = {};\nmsg.headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n\n// Use your `client_id` and `client_secret` from KPN API Store.\nmsg.payload = 'client_id=' + msg.client_id + '&client_secret=' + msg.client_secret;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":159,"y":265,"wires":[["55f048dd.3c8438"]],"info":"To use KPN APIs, an access token (also called bearer) token must first be obtained.\n\nThe bearer token is obtained by invoking an Authorization API (`loginAPI`) using a POST method.\n\nThe API payload is an object with the `client credentials`:\n* `client_id`\n* `client_secret`\n\n\nUse your `client_id` and `client_secret` from KPN API Store.\n\nIf correct, the API returns a payload object that will contain a valid access token authentication in subsequest API requests."},{"id":"55f048dd.3c8438","type":"http request","z":"dc22f819.143a78","name":"Access token request","method":"use","ret":"obj","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","authType":"","x":179,"y":325,"wires":[["9f273a74.dea228","5e99af21.3156a"]]},{"id":"9f273a74.dea228","type":"debug","z":"dc22f819.143a78","name":"Token request result","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":179,"y":385,"wires":[]},{"id":"707b1775.e78608","type":"comment","z":"dc22f819.143a78","name":"Readme: Obtain access token ","info":"# This flow fetches the OAuth access token from the KPN Authorization API and passes it on to other flows.\n\n1. Sign into the KPN API Store.\n2. Go to the Sandbox.\n3. Copy your `Client ID` and `Client secret`.\n2. Double-click on the node `Set API Store credentials`.\n2. Paste your `Client ID` and `Client secret` into the corresponding fields.\n3. Click `Done`.","x":199,"y":97,"wires":[],"icon":"node-red/alert.svg"},{"id":"7c48c7ea.7f52f8","type":"comment","z":"dc22f819.143a78","name":"Readme: Create new user","info":"# This flow creates a new agent user\n\n## Connect the flow\n\n1. Disconnect any other flows.\n2. Connect the `Obtain access token flow` with this flow. \n\n## Set the request body\n\n1. Double-click the node `Set request body`\n2. Double-click on the three dots to open the JSON and enter the details of the new user.\n\n```json\n{\n    \"email\": \"new.user@email.com\",\n}\n```\n3. Click `Done`\n\n## Save the changes\n\n1. Click `Deploy`\n\n## Send the request\n\n1. Click on the `Trigger request` button to send the request.\n\n## Check the response \n\n1. Go to the `Debug messages` pane.","x":570,"y":200,"wires":[]},{"id":"4406e75c.1b8c58","type":"comment","z":"dc22f819.143a78","name":"Readme: Send E-mail request","info":"# This flow creates a new agent user\n\n## Connect the flow\n\n1. Disconnect any other flows.\n2. Connect the `Obtain access token flow` with this flow. \n\n## Set the request body\n\n1. Double-click the node `Set request body`\n2. Double-click on the three dots to open the JSON and enter the details.\n\n```json\n{\n  \"message_body\": \"this is the email body\",\n  \"sender_email\": \"sender@email.com\",\n  \"sender_real_name\": \"Jane Doe\",\n  \"subject\": \"this is the subject\",\n  \"x-own-id\": \"id\",\n  \"x-own-guid\": \"guid\",\n  \"x-own-campaign\": \"campaign\",\n  \"recipient_email\": \"recipient@email.com\",\n  \"recipient_language\": \"en\",\n  \"attachments\": [\n    {\n      \"attachment\": \"BAse64E=\",\n      \"attachment_name\": \"attachment.pdf\",\n      \"attachment_type\": \"application/pdf\"\n    }\n  ]\n}\n```\n\nParameter            |  Description\n---------------------|----------------------------------------------------\n`message_body`       |  Content of the message.\n`sender_email`       |  E‑mail address of the sender.\n`sender_real_name`   |  Name of the sender.\n`subject`            |  Subject line of the e‑mail.\n`x-own-id`           |  User ID.\n`x-own-guid`         |  Globally Unique Identifier (GUID).\n`x-own-campaign`     |  Campaign code. Allows to filter sent-emails using this code, for example `1234`. Optional.\n`recipient_email`    |  E‑mail address of the recipient.\n`recipient_language` |  Language of the recipient.\n`attachment_name`    |  Name of the e‑mail attachment.\n`attachment_type`    |  Document type of the e‑mail attachment. Supports are all common document types.\n\n</br>\n\n3. Click `Done`.\n\n## Save the changes\n\n1. Click `Deploy`.\n\n## Send the request\n\n1. Click on the `Trigger request` button to send the request.\n\n## Check the response \n\n1. Go to the `Debug messages` pane.","x":580,"y":380,"wires":[]}]